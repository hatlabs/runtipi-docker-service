name: build

on: [push, pull_request]

jobs:
  # Build packages on every push
  build-packages:
    runs-on: ubuntu-latest-arm64
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v5

    - name: Auto-increment version and update changelog
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Read upstream version from VERSION file
        UPSTREAM_VERSION=$(cat VERSION | sed 's/^v//')
        echo "Upstream version: $UPSTREAM_VERSION"

        # Find the next available revision number
        REVISION=1
        while gh release view "v${UPSTREAM_VERSION}-${REVISION}" &>/dev/null; do
          echo "Release v${UPSTREAM_VERSION}-${REVISION} exists, trying next..."
          REVISION=$((REVISION + 1))
        done

        PACKAGE_VERSION="${UPSTREAM_VERSION}-${REVISION}"
        echo "Package version will be: $PACKAGE_VERSION"

        # Generate debian/changelog entry
        TIMESTAMP=$(date -R)
        cat > debian/changelog << EOF
        runtipi-docker-service ($PACKAGE_VERSION) trixie; urgency=medium

          * Automated release v$PACKAGE_VERSION
          * Runtipi upstream version: v$UPSTREAM_VERSION
          * For detailed changes: https://github.com/${{ github.repository }}/commits/main

         -- Hat Labs <info@hatlabs.fi>  $TIMESTAMP
        EOF

        echo "Generated debian/changelog:"
        cat debian/changelog

    - name: Read version from debian/changelog
      id: version
      run: |
        # Extract version from first line of debian/changelog (includes Debian revision)
        VERSION=$(dpkg-parsechangelog -S Version)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Found version: $VERSION"

    - name: Build packages
      run: |
        # Use the CI-specific package build function
        ./run package:deb:docker:ci

    - name: Collect built packages
      run: |
        mkdir -p packages
        # Find .deb files in current and parent directory (dpkg-buildpackage creates them in parent)
        find . .. -maxdepth 1 -name "*.deb" -exec cp {} packages/ \; 2>/dev/null || true
        ls -la packages/
        echo "Found packages:"
        ls -1 packages/*.deb 2>/dev/null || echo "No packages found"

    - name: Upload packages as artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: debian-packages-${{ steps.version.outputs.version }}
        path: packages/*.deb
        retention-days: 30
